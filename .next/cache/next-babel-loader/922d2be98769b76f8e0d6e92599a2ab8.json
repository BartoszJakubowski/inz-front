{"ast":null,"code":"import { connect } from 'react-redux';\nimport { wrapper } from 'store';\n// import UserEffect from 'models/UserEffect';\nimport { getLocale } from 'utils/locale';\nimport Component from './component'; // import { list as listEffects, ListParams as ListEffectsParams } from 'store/modules/userEffects/actions';\n\nComponent.getInitialProps = wrapper.getInitialPageProps(store => async ({\n  req,\n  res,\n  query\n}) => {\n  const locale = getLocale(); // await store.dispatch(listEffects({ perPage: 999, promoted: true }) as any);\n\n  return {\n    data: locale.home\n  };\n});\n\nconst mapStateToProps = state => {\n  return {\n    state: {// userEffects: state.userEffects.list,\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {// listEffects: bindActionCreators<any, any>(listEffects, dispatch),\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/modules/public/pages/Login/index.tsx"],"names":["connect","wrapper","getLocale","Component","getInitialProps","getInitialPageProps","store","req","res","query","locale","data","home","mapStateToProps","state","mapDispatchToProps","dispatch","actions"],"mappings":"AAEA,SAASA,OAAT,QAAwB,aAAxB;AAIA,SAASC,OAAT,QAAwB,OAAxB;AAOA;AAEA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AAgBAA,SAAS,CAACC,eAAV,GAA4BH,OAAO,CAACI,mBAAR,CAA4BC,KAAK,IAAI,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAP,KAAgD;AAC7G,QAAMC,MAAM,GAAGR,SAAS,EAAxB,CAD6G,CAG7G;;AAEA,SAAO;AACHS,IAAAA,IAAI,EAAED,MAAM,CAACE;AADV,GAAP;AAGH,CAR2B,CAA5B;;AAUA,MAAMC,eAAe,GAAIC,KAAD,IAA0B;AAC9C,SAAO;AACHA,IAAAA,KAAK,EAAE,CACH;AADG;AADJ,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAgC;AACvD,SAAO;AACHC,IAAAA,OAAO,EAAE,CACL;AADK;AADN,GAAP;AAKH,CAND;;AAQA,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,SAA7C,CAAf","sourcesContent":["import { NextPageContext } from 'next';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Props as SectionHeroProps } from 'components/modules/public/pages/Home/sections/Hero';\n\nimport { wrapper } from 'store';\nimport { State } from 'store/state';\n\nimport { Page } from 'locales/types/components';\nimport ListCollection from 'types/redux/ListCollection';\nimport { ActionResponse } from 'types/redux/ActionResponse';\n\n// import UserEffect from 'models/UserEffect';\n\nimport { getLocale } from 'utils/locale'; \n\nimport Component from './component';\n\n// import { list as listEffects, ListParams as ListEffectsParams } from 'store/modules/userEffects/actions';\n\nexport interface Props {\n    data: Page<PageContent>;\n    // actions: {\n    //     listEffects: (params: ListEffectsParams) => Promise<ActionResponse>;\n    // }\n    state: {\n        // userEffects: ListCollection<UserEffect>\n    };\n}\n\nexport interface PageContent {\n    hero: SectionHeroProps;\n}\n\nComponent.getInitialProps = wrapper.getInitialPageProps(store => async ({ req, res, query }: NextPageContext) => {\n    const locale = getLocale();\n\n    // await store.dispatch(listEffects({ perPage: 999, promoted: true }) as any);\n    \n    return {\n        data: locale.home,\n    }\n});\n\nconst mapStateToProps = (state: State): object => {\n    return {\n        state: {\n            // userEffects: state.userEffects.list,\n        },\n    };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): object => {\n    return {\n        actions: {\n            // listEffects: bindActionCreators<any, any>(listEffects, dispatch),\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]},"metadata":{},"sourceType":"module"}