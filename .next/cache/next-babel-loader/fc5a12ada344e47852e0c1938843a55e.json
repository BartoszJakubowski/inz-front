{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/Pulpit/inz/my-app/src/components/layout/NavSection/component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport classnames from 'classnames';\nimport StyledComponent from './styles';\nimport NavElement from 'components/layout/NavElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LayoutNavSection = ({\n  elements,\n  variant\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledComponent, {\n    className: classnames('layout-nav-section', `variant-${variant}`),\n    children: elements.map(element => /*#__PURE__*/_jsxDEV(NavElement, _objectSpread({\n      variant: variant\n    }, element), element.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\nexport default LayoutNavSection;","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/layout/NavSection/component.tsx"],"names":["classnames","StyledComponent","NavElement","LayoutNavSection","elements","variant","map","element","key"],"mappings":";;;;;;;;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAIA,OAAOC,eAAP,MAA4B,UAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,MAAMC,gBAA0C,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC1E,sBACI,QAAC,eAAD;AACI,IAAA,SAAS,EAAEL,UAAU,CACjB,oBADiB,EAEhB,WAAUK,OAAQ,EAFF,CADzB;AAAA,cAMKD,QAAQ,CAACE,GAAT,CAAaC,OAAO,iBACjB,QAAC,UAAD;AAEI,MAAA,OAAO,EAAEF;AAFb,OAGQE,OAHR,GACSA,OAAO,CAACC,GADjB;AAAA;AAAA;AAAA;AAAA,YADH;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjBD;;AAmBA,eAAeL,gBAAf","sourcesContent":["import { FunctionComponent } from 'react';\nimport classnames from 'classnames';\n\nimport { Props } from './index';\n\nimport StyledComponent from './styles';\nimport NavElement from 'components/layout/NavElement';\n\nconst LayoutNavSection: FunctionComponent<Props> = ({ elements, variant }) => {\n    return (\n        <StyledComponent\n            className={classnames(\n                'layout-nav-section',\n                `variant-${variant}`,\n            )}\n        >\n            {elements.map(element => (\n                <NavElement \n                    key={element.key}\n                    variant={variant}\n                    {...element}\n                />\n            ))}\n        </StyledComponent>\n    )\n};\n\nexport default LayoutNavSection;"]},"metadata":{},"sourceType":"module"}