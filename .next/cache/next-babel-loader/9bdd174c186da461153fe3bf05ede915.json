{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport let Types;\n\n(function (Types) {\n  Types[\"OrderItemFile\"] = \"orderItemFile\";\n  Types[\"OrderCommentFile\"] = \"orderCommentFile\";\n  Types[\"OrderAcceptanceFile\"] = \"orderAcceptanceFile\";\n})(Types || (Types = {}));\n\nexport default class FileUpload {\n  constructor(data) {\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"fileName\", void 0);\n\n    _defineProperty(this, \"originalName\", void 0);\n\n    _defineProperty(this, \"mimeType\", void 0);\n\n    _defineProperty(this, \"putUrl\", void 0);\n\n    _defineProperty(this, \"getUrl\", void 0);\n\n    _defineProperty(this, \"storagePath\", void 0);\n\n    _defineProperty(this, \"imageUrl\", void 0);\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.originalName = data.originalName;\n    this.mimeType = data.mimeType;\n    this.putUrl = data.putUrl;\n    this.getUrl = data.getUrl;\n    this.storagePath = data.storagePath;\n    this.imageUrl = data.imageUrl;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}