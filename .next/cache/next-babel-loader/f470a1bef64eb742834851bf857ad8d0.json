{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/Pulpit/inz/my-app/src/components/layout/forms/Form/component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Formik } from 'formik';\nimport StyledComponent from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LayoutFormsForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: null\n    });\n\n    _defineProperty(this, \"onSubmit\", async (values, formikHelpers) => {\n      const {\n        submitAction,\n        onSubmitData,\n        onSuccess,\n        onError\n      } = this.props;\n\n      try {\n        const response = await submitAction(_objectSpread({}, onSubmitData(values)));\n        return onSuccess(response, formikHelpers);\n      } catch (error) {\n        var _error$payload;\n\n        console.error(error);\n\n        if (Object.keys(error === null || error === void 0 ? void 0 : (_error$payload = error.payload) === null || _error$payload === void 0 ? void 0 : _error$payload.validationErrors).length > 0) {\n          formikHelpers.setErrors(error.payload.validationErrors);\n        } else {\n          this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n            errorMessage: 'Błąd komunikacji'\n          }));\n        }\n\n        return onError(error, formikHelpers);\n      }\n    });\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        initialValues,\n        children,\n        errorMessage\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(StyledComponent, {\n        className: \"layout-forms-form\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          onSubmit: (values, formikHelpers) => this.onSubmit(values, formikHelpers),\n          className: \"form-container\",\n          children: formik => {\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: formik.handleSubmit,\n              children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-error-message\",\n                children: errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), children({\n                formik,\n                errors: {},\n                errorMessage\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n}\n\n_defineProperty(LayoutFormsForm, \"defaultProps\", {\n  children: null,\n  errorMessage: null,\n  initialValues: {},\n  onSuccess: (response, formikHelpers) => response,\n  onError: error => error,\n  onSubmitData: values => values,\n  submitAction: null\n});","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/layout/forms/Form/component.tsx"],"names":["Component","Formik","StyledComponent","LayoutFormsForm","errorMessage","values","formikHelpers","submitAction","onSubmitData","onSuccess","onError","props","response","error","console","Object","keys","payload","validationErrors","length","setErrors","setState","prevState","initialValues","children","onSubmit","formik","handleSubmit","errors"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAAqC,OAArC;AACA,SAAeC,MAAf,QAA4C,QAA5C;AAIA,OAAOC,eAAP,MAA4B,UAA5B;;AAEA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAA+C;AAAA;AAAA;;AAAA,mCAU3C;AACXI,MAAAA,YAAY,EAAE;AADH,KAV2C;;AAAA,sCAc/C,OAAOC,MAAP,EAAuBC,aAAvB,KAA2E;AAClF,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA,YAAhB;AAA8BC,QAAAA,SAA9B;AAAyCC,QAAAA;AAAzC,UAAqD,KAAKC,KAAhE;;AAEA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAML,YAAY,mBAC5BC,YAAY,CAACH,MAAD,CADgB,EAAnC;AAIA,eAAOI,SAAS,CAACG,QAAD,EAAWN,aAAX,CAAhB;AACH,OAND,CAME,OAAOO,KAAP,EAAc;AAAA;;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;;AACA,YAAIE,MAAM,CAACC,IAAP,CAAYH,KAAZ,aAAYA,KAAZ,yCAAYA,KAAK,CAAEI,OAAnB,mDAAY,eAAgBC,gBAA5B,EAA8CC,MAA9C,GAAuD,CAA3D,EAA8D;AAC1Db,UAAAA,aAAa,CAACc,SAAd,CAAwBP,KAAK,CAACI,OAAN,CAAcC,gBAAtC;AACH,SAFD,MAEO;AACH,eAAKG,QAAL,CAAeC,SAAD,oCACPA,SADO;AAEVlB,YAAAA,YAAY,EAAE;AAFJ,YAAd;AAIH;;AAED,eAAOM,OAAO,CAACG,KAAD,EAAQP,aAAR,CAAd;AACH;AACJ,KApCyD;;AAAA,oCAsCjD,MAAiB;AACtB,YAAM;AAAEiB,QAAAA,aAAF;AAAiBC,QAAAA,QAAjB;AAA2BpB,QAAAA;AAA3B,UAA4C,KAAKO,KAAvD;AAEA,0BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,mBAA3B;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,aAAa,EAAEY,aADnB;AAEI,UAAA,QAAQ,EAAE,CAAClB,MAAD,EAAiBC,aAAjB,KAAuD,KAAKmB,QAAL,CAAcpB,MAAd,EAAsBC,aAAtB,CAFrE;AAGI,UAAA,SAAS,EAAC,gBAHd;AAAA,oBAKKoB,MAAM,IAAI;AACP,gCACI;AAAM,cAAA,QAAQ,EAAEA,MAAM,CAACC,YAAvB;AAAA,yBACKvB,YAAY,iBACT;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,0BACKA;AADL;AAAA;AAAA;AAAA;AAAA,sBAFR,EAMKoB,QAAQ,CAAC;AAAEE,gBAAAA,MAAF;AAAUE,gBAAAA,MAAM,EAAE,EAAlB;AAAsBxB,gBAAAA;AAAtB,eAAD,CANb;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAUH;AAhBL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAsBH,KA/DyD;AAAA;;AAAA;;gBAAzCD,e,kBACK;AAClBqB,EAAAA,QAAQ,EAAE,IADQ;AAElBpB,EAAAA,YAAY,EAAE,IAFI;AAGlBmB,EAAAA,aAAa,EAAE,EAHG;AAIlBd,EAAAA,SAAS,EAAE,CAACG,QAAD,EAAmBN,aAAnB,KAA8DM,QAJvD;AAKlBF,EAAAA,OAAO,EAAGG,KAAD,IAAwBA,KALf;AAMlBL,EAAAA,YAAY,EAAGH,MAAD,IAA4BA,MANxB;AAOlBE,EAAAA,YAAY,EAAE;AAPI,C","sourcesContent":["import { Component, ReactNode } from 'react';\nimport { Form, Formik, FormikHelpers } from 'formik';\n\nimport { Props, State } from './index';\n\nimport StyledComponent from './styles';\n\nexport default class LayoutFormsForm extends Component<Props> {\n    static defaultProps = {\n        children: null,\n        errorMessage: null,\n        initialValues: {},\n        onSuccess: (response: object, formikHelpers: FormikHelpers<any>): any => response,\n        onError: (error: object): any => error,\n        onSubmitData: (values: object): object => values,\n        submitAction: null,\n    };\n    state: State = {\n        errorMessage: null,\n    }\n\n    onSubmit = async (values: object, formikHelpers: FormikHelpers<any>): Promise<any> => {\n        const { submitAction, onSubmitData, onSuccess, onError } = this.props;\n\n        try {\n            const response = await submitAction({\n                ...onSubmitData(values),\n            });\n\n            return onSuccess(response, formikHelpers)\n        } catch (error) {\n            console.error(error);\n            if (Object.keys(error?.payload?.validationErrors).length > 0) {\n                formikHelpers.setErrors(error.payload.validationErrors);\n            } else {\n                this.setState((prevState: State) => ({\n                    ...prevState,\n                    errorMessage: 'Błąd komunikacji',\n                }));\n            }\n\n            return onError(error, formikHelpers);\n        }\n    }\n\n    render = (): ReactNode => {\n        const { initialValues, children, errorMessage } = this.props;\n\n        return (\n            <StyledComponent className=\"layout-forms-form\">\n                <Formik\n                    initialValues={initialValues}\n                    onSubmit={(values: object, formikHelpers: FormikHelpers<any>) => this.onSubmit(values, formikHelpers)}\n                    className=\"form-container\"\n                >\n                    {formik => {\n                        return (\n                            <form onSubmit={formik.handleSubmit}>\n                                {errorMessage && (\n                                    <div className=\"form-error-message\">\n                                        {errorMessage}\n                                    </div>\n                                )}\n                                {children({ formik, errors: {}, errorMessage })}\n                            </form>\n                        )\n                    }}\n                </Formik>\n            </StyledComponent>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}