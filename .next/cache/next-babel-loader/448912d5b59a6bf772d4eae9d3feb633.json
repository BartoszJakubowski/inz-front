{"ast":null,"code":"import * as types from './types';\nimport { reduxRequest as request } from 'services/Api';\nimport { withVariables } from 'utils/string';\nimport { ENDPOINT_PUBLIC_USER_EFFECTS, ENDPOINT_PUBLIC_USER_EFFECT } from 'consts/api';\nexport var list = function list(params) {\n  return function (dispatch, getState) {\n    return dispatch(request({\n      getState: getState,\n      reduxType: types.LIST,\n      method: 'GET',\n      path: withVariables(ENDPOINT_PUBLIC_USER_EFFECTS, params),\n      params: params,\n      requestParams: params\n    }))[\"catch\"](function (error) {\n      console.error(error);\n      throw error;\n    });\n  };\n};\nexport var single = function single(params) {\n  return function (dispatch, getState) {\n    return dispatch(request({\n      getState: getState,\n      reduxType: types.SINGLE,\n      method: 'GET',\n      path: withVariables(ENDPOINT_PUBLIC_USER_EFFECT, params),\n      params: params\n    }))[\"catch\"](function (error) {\n      console.error(error);\n      throw error;\n    });\n  };\n};","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/store/modules/userEffects/actions.ts"],"names":["types","reduxRequest","request","withVariables","ENDPOINT_PUBLIC_USER_EFFECTS","ENDPOINT_PUBLIC_USER_EFFECT","list","params","dispatch","getState","reduxType","LIST","method","path","requestParams","error","console","single","SINGLE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAGA,SAASC,YAAY,IAAIC,OAAzB,QAAwC,cAAxC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,SACIC,4BADJ,EAEIC,2BAFJ,QAGO,YAHP;AAeA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,MAAD;AAAA,SAAwB,UAACC,QAAD,EAAqBC,QAArB,EAAqE;AAC7G,WAAOD,QAAQ,CACXN,OAAO,CAAC;AACJO,MAAAA,QAAQ,EAARA,QADI;AAEJC,MAAAA,SAAS,EAAEV,KAAK,CAACW,IAFb;AAGJC,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,IAAI,EAAEV,aAAa,CAACC,4BAAD,EAA+BG,MAA/B,CAJf;AAKJA,MAAAA,MAAM,EAANA,MALI;AAMJO,MAAAA,aAAa,EAAEP;AANX,KAAD,CADI,CAAR,UAUI,UAAAQ,KAAK,EAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,YAAMA,KAAN;AACH,KAbE,CAAP;AAcH,GAfmB;AAAA,CAAb;AAiBP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACV,MAAD;AAAA,SAA0B,UAACC,QAAD,EAAqBC,QAArB,EAAqE;AACjH,WAAOD,QAAQ,CACXN,OAAO,CAAC;AACJO,MAAAA,QAAQ,EAARA,QADI;AAEJC,MAAAA,SAAS,EAAEV,KAAK,CAACkB,MAFb;AAGJN,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,IAAI,EAAEV,aAAa,CAACE,2BAAD,EAA8BE,MAA9B,CAJf;AAKJA,MAAAA,MAAM,EAANA;AALI,KAAD,CADI,CAAR,UASI,UAAAQ,KAAK,EAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,YAAMA,KAAN;AACH,KAZE,CAAP;AAaH,GAdqB;AAAA,CAAf","sourcesContent":["import * as types from './types';\nimport { ActionResponse } from 'types/redux/ActionResponse';\n\nimport { reduxRequest as request } from 'services/Api';\nimport { withVariables } from 'utils/string';\n\nimport { \n    ENDPOINT_PUBLIC_USER_EFFECTS,\n    ENDPOINT_PUBLIC_USER_EFFECT,\n} from 'consts/api';\n\nexport interface ListParams {\n    promoted?: boolean;\n    leadId?: number;\n    perPage?: number;\n}\n\nexport interface SingleParams {\n    id: string;\n}\n\nexport const list = (params: ListParams) => (dispatch: Function, getState: Function): Promise<ActionResponse> => {\n    return dispatch(\n        request({\n            getState,\n            reduxType: types.LIST,\n            method: 'GET',\n            path: withVariables(ENDPOINT_PUBLIC_USER_EFFECTS, params),\n            params,\n            requestParams: params,\n        })\n    )\n        .catch(error => {\n            console.error(error);\n            throw error;\n        });\n};\n\nexport const single = (params: SingleParams) => (dispatch: Function, getState: Function): Promise<ActionResponse> => {\n    return dispatch(\n        request({\n            getState,\n            reduxType: types.SINGLE,\n            method: 'GET',\n            path: withVariables(ENDPOINT_PUBLIC_USER_EFFECT, params),\n            params,\n        })\n    )\n        .catch(error => {\n            console.error(error);\n            throw error;\n        });\n};"]},"metadata":{},"sourceType":"module"}