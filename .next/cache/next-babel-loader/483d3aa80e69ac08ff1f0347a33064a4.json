{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { HYDRATE, createWrapper } from 'next-redux-wrapper';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { serialize, deserialize } from 'json-immutable';\nimport state, { initialState } from 'store/state';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar combinedReducer = combineReducers(state);\n\nvar reducer = function reducer(storeState, action) {\n  if (action.type === HYDRATE) {\n    return _objectSpread(_objectSpread({}, storeState), action.payload);\n  } else {\n    return combinedReducer(storeState, action);\n  }\n};\n\nexport var initStore = function initStore(context) {\n  return createStore(reducer, initialState, bindMiddleware([thunkMiddleware]));\n};\nexport var wrapper = createWrapper(initStore, {\n  serializeState: function serializeState(nextState) {\n    return typeof nextState === 'string' ? nextState : serialize(nextState);\n  },\n  deserializeState: function deserializeState(nextState) {\n    return typeof nextState === 'string' ? deserialize(nextState) : nextState;\n  }\n});","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/store/index.ts"],"names":["createStore","applyMiddleware","combineReducers","HYDRATE","createWrapper","thunkMiddleware","composeWithDevTools","serialize","deserialize","state","initialState","bindMiddleware","middleware","combinedReducer","reducer","storeState","action","type","payload","initStore","context","wrapper","serializeState","nextState","deserializeState"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAAqE,OAArE;AACA,SAASC,OAAT,EAA2BC,aAA3B,QAAgD,oBAAhD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,gBAAvC;AAGA,OAAOC,KAAP,IAAgBC,YAAhB,QAA2C,aAA3C;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACnC,YAA2C;AACvC,WAAON,mBAAmB,CAACL,eAAe,MAAf,4BAAmBW,UAAnB,EAAD,CAA1B;AACH;;AAED,SAAOX,eAAe,MAAf,4BAAmBW,UAAnB,EAAP;AACH,CAND;;AAQA,IAAMC,eAAe,GAAGX,eAAe,CAACO,KAAD,CAAvC;;AAEA,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,UAAD,EAAoBC,MAApB,EAA+C;AAC3D,MAAIA,MAAM,CAACC,IAAP,KAAgBd,OAApB,EAA6B;AACzB,2CACOY,UADP,GAEOC,MAAM,CAACE,OAFd;AAIH,GALD,MAKO;AACH,WAAOL,eAAe,CAACE,UAAD,EAAaC,MAAb,CAAtB;AACH;AACJ,CATD;;AAWA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAA2B;AAChD,SAAOpB,WAAW,CACdc,OADc,EAEdJ,YAFc,EAGdC,cAAc,CAAC,CAACN,eAAD,CAAD,CAHA,CAAlB;AAKH,CANM;AAQP,OAAO,IAAMgB,OAAO,GAAGjB,aAAa,CAAee,SAAf,EAA0B;AAC1DG,EAAAA,cAAc,EAAE,wBAAAC,SAAS;AAAA,WAAI,OAAOA,SAAP,KAAqB,QAArB,GACvBA,SADuB,GAEvBhB,SAAS,CAACgB,SAAD,CAFU;AAAA,GADiC;AAI1DC,EAAAA,gBAAgB,EAAE,0BAAAD,SAAS;AAAA,WAAI,OAAOA,SAAP,KAAqB,QAArB,GACzBf,WAAW,CAACe,SAAD,CADc,GAEzBA,SAFqB;AAAA;AAJ+B,CAA1B,CAA7B","sourcesContent":["import { createStore, applyMiddleware, combineReducers, Store } from 'redux';\nimport { HYDRATE, Context, createWrapper } from 'next-redux-wrapper';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { serialize, deserialize } from 'json-immutable';\n\nimport { ActionResponse } from 'types/redux/ActionResponse'\nimport state, { initialState, State } from 'store/state';\n\nconst bindMiddleware = (middleware) => {\n    if (process.env.NODE_ENV !== 'production') {\n        return composeWithDevTools(applyMiddleware(...middleware));\n    }\n\n    return applyMiddleware(...middleware);\n};\n\nconst combinedReducer = combineReducers(state);\n\nconst reducer = (storeState: State, action: ActionResponse) => {\n    if (action.type === HYDRATE) {\n        return{\n            ...storeState, // use previous state\n            ...action.payload, // apply delta from hydration\n        };\n    } else {\n        return combinedReducer(storeState, action);\n    }\n};\n\nexport const initStore = (context: Context): any => {\n    return createStore(\n        reducer,\n        initialState,\n        bindMiddleware([thunkMiddleware])\n    );\n};\n\nexport const wrapper = createWrapper<Store<State>>(initStore, {\n    serializeState: nextState => typeof nextState === 'string'\n        ? nextState\n        : serialize(nextState),\n    deserializeState: nextState => typeof nextState === 'string'\n        ? deserialize(nextState)\n        : nextState,\n});"]},"metadata":{},"sourceType":"module"}