{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport * as types from './types';\nimport { INIT_FLAG, SUCCESS_FLAG, FAIL_FLAG, ELEMENT_MARKUP } from 'consts/redux';\nimport { API_RESOURCE_LOCATION } from 'consts/apiResources';\nimport Location from 'models/Location';\nexport const initialState = {\n  mapBySlug: {}\n};\nexport default function LocationReducer(state = initialState, action) {\n  switch (action.type) {\n    case HYDRATE:\n      // Attention! This will overwrite client state! Real apps should use proper reconciliation.\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case types.SINGLE_BY_SLUG + '_' + INIT_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mapBySlug: _objectSpread(_objectSpread({}, state.mapBySlug), {}, {\n          [action.params.slug]: _objectSpread(_objectSpread(_objectSpread({}, ELEMENT_MARKUP), state.mapBySlug[action.params.slug] || {}), {}, {\n            isLoading: true,\n            isLoaded: false\n          })\n        })\n      });\n\n    case types.SINGLE_BY_SLUG + '_' + SUCCESS_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mapBySlug: _objectSpread(_objectSpread({}, state.mapBySlug), {}, {\n          [action.params.slug]: _objectSpread(_objectSpread(_objectSpread({}, ELEMENT_MARKUP), state.mapBySlug[action.params.slug] || {}), {}, {\n            isLoading: false,\n            isLoaded: true,\n            data: new Location(action.payload.data[API_RESOURCE_LOCATION]),\n            error: false\n          })\n        })\n      });\n\n    case types.SINGLE_BY_SLUG + '_' + FAIL_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mapBySlug: _objectSpread(_objectSpread({}, state.mapBySlug), {}, {\n          [action.params.slug]: _objectSpread(_objectSpread(_objectSpread({}, ELEMENT_MARKUP), state.mapBySlug[action.params.slug] || {}), {}, {\n            isLoading: false,\n            isLoaded: true,\n            data: null,\n            error: true\n          })\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/store/modules/locations/reducer.ts"],"names":["HYDRATE","types","INIT_FLAG","SUCCESS_FLAG","FAIL_FLAG","ELEMENT_MARKUP","API_RESOURCE_LOCATION","Location","initialState","mapBySlug","LocationReducer","state","action","type","payload","SINGLE_BY_SLUG","params","slug","isLoading","isLoaded","data","error"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAGA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,SAAlC,EAA6CC,cAA7C,QAAgF,cAAhF;AAEA,SAASC,qBAAT,QAAsC,qBAAtC;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AAQA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE;AADa,CAArB;AAIP,eAAe,SAASC,eAAT,CAAyBC,KAAY,GAAGH,YAAxC,EAAsDI,MAAtD,EAAwE;AACnF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,OAAL;AACI;AACA,6CAAYW,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;AAEA,SAAKb,KAAK,CAACc,cAAN,GAAuB,GAAvB,GAA6Bb,SAAlC;AACI,6CACOS,KADP;AAEIF,QAAAA,SAAS,kCACFE,KAAK,CAACF,SADJ;AAEL,WAACG,MAAM,CAACI,MAAP,CAAcC,IAAf,iDACOZ,cADP,GAEQM,KAAK,CAACF,SAAN,CAAgBG,MAAM,CAACI,MAAP,CAAcC,IAA9B,KAAuC,EAF/C;AAGIC,YAAAA,SAAS,EAAE,IAHf;AAIIC,YAAAA,QAAQ,EAAE;AAJd;AAFK;AAFb;;AAYJ,SAAKlB,KAAK,CAACc,cAAN,GAAuB,GAAvB,GAA6BZ,YAAlC;AACI,6CACOQ,KADP;AAEIF,QAAAA,SAAS,kCACFE,KAAK,CAACF,SADJ;AAEL,WAACG,MAAM,CAACI,MAAP,CAAcC,IAAf,iDACOZ,cADP,GAEQM,KAAK,CAACF,SAAN,CAAgBG,MAAM,CAACI,MAAP,CAAcC,IAA9B,KAAuC,EAF/C;AAGIC,YAAAA,SAAS,EAAE,KAHf;AAIIC,YAAAA,QAAQ,EAAE,IAJd;AAKIC,YAAAA,IAAI,EAAE,IAAIb,QAAJ,CAAaK,MAAM,CAACE,OAAP,CAAeM,IAAf,CAAoBd,qBAApB,CAAb,CALV;AAMIe,YAAAA,KAAK,EAAE;AANX;AAFK;AAFb;;AAcJ,SAAKpB,KAAK,CAACc,cAAN,GAAuB,GAAvB,GAA6BX,SAAlC;AACI,6CACOO,KADP;AAEIF,QAAAA,SAAS,kCACFE,KAAK,CAACF,SADJ;AAEL,WAACG,MAAM,CAACI,MAAP,CAAcC,IAAf,iDACOZ,cADP,GAEQM,KAAK,CAACF,SAAN,CAAgBG,MAAM,CAACI,MAAP,CAAcC,IAA9B,KAAuC,EAF/C;AAGIC,YAAAA,SAAS,EAAE,KAHf;AAIIC,YAAAA,QAAQ,EAAE,IAJd;AAKIC,YAAAA,IAAI,EAAE,IALV;AAMIC,YAAAA,KAAK,EAAE;AANX;AAFK;AAFb;;AAeR;AACI,aAAOV,KAAP;AAlDR;AAoDH","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nimport * as types from './types';\nimport Element from 'types/redux/Element';\n\nimport { INIT_FLAG, SUCCESS_FLAG, FAIL_FLAG, ELEMENT_MARKUP, LIST_MARKUP } from 'consts/redux';\n\nimport { API_RESOURCE_LOCATION } from 'consts/apiResources';\n\nimport Location from 'models/Location';\n\nexport interface State {\n    mapBySlug: {\n        [key: string]: Element<Location>;\n    };\n}\n\nexport const initialState = {\n    mapBySlug: {},\n};\n\nexport default function LocationReducer(state: State = initialState, action: any): any {\n    switch (action.type) {\n        case HYDRATE:\n            // Attention! This will overwrite client state! Real apps should use proper reconciliation.\n            return { ...state, ...action.payload };\n\n            case types.SINGLE_BY_SLUG + '_' + INIT_FLAG:\n                return {\n                    ...state,\n                    mapBySlug: {\n                        ...state.mapBySlug,\n                        [action.params.slug]: {\n                            ...ELEMENT_MARKUP,\n                            ...(state.mapBySlug[action.params.slug] || {}),\n                            isLoading: true,\n                            isLoaded: false,\n                        },\n                    },\n                };\n            case types.SINGLE_BY_SLUG + '_' + SUCCESS_FLAG:\n                return {\n                    ...state,\n                    mapBySlug: {\n                        ...state.mapBySlug,\n                        [action.params.slug]: {\n                            ...ELEMENT_MARKUP,\n                            ...(state.mapBySlug[action.params.slug] || {}),\n                            isLoading: false,\n                            isLoaded: true,\n                            data: new Location(action.payload.data[API_RESOURCE_LOCATION]),\n                            error: false,\n                        },\n                    },\n                };\n            case types.SINGLE_BY_SLUG + '_' + FAIL_FLAG:\n                return {\n                    ...state,\n                    mapBySlug: {\n                        ...state.mapBySlug,\n                        [action.params.slug]: {\n                            ...ELEMENT_MARKUP,\n                            ...(state.mapBySlug[action.params.slug] || {}),\n                            isLoading: false,\n                            isLoaded: true,\n                            data: null,\n                            error: true,\n                        },\n                    },\n                };\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}