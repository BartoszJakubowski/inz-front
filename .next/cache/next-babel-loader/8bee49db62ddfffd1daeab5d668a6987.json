{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { wrapper } from 'store';\nimport { getLocale } from 'utils/locale';\nimport Component from './component';\nimport { list as listEffects } from 'store/modules/userEffects/actions';\nComponent.getInitialProps = wrapper.getInitialPageProps(function (store) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var req, res, query, locale;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              req = _ref.req, res = _ref.res, query = _ref.query;\n              locale = getLocale();\n              _context.next = 4;\n              return store.dispatch(listEffects({\n                perPage: 999,\n                promoted: true\n              }));\n\n            case 4:\n              return _context.abrupt(\"return\", {\n                data: locale.home\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: {\n      userEffects: state.userEffects.list\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      listEffects: bindActionCreators(listEffects, dispatch)\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/modules/public/pages/Home/index.tsx"],"names":["bindActionCreators","connect","wrapper","getLocale","Component","list","listEffects","getInitialProps","getInitialPageProps","store","req","res","query","locale","dispatch","perPage","promoted","data","home","mapStateToProps","state","userEffects","mapDispatchToProps","actions"],"mappings":";;AACA,SAASA,kBAAT,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAIA,SAASC,OAAT,QAAwB,OAAxB;AASA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,IAAI,IAAIC,WAAjB,QAAqE,mCAArE;AAgBAF,SAAS,CAACG,eAAV,GAA4BL,OAAO,CAACM,mBAAR,CAA4B,UAAAC,KAAK;AAAA;AAAA,yEAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,GAAT,QAASA,GAAT,EAAcC,GAAd,QAAcA,GAAd,EAAmBC,KAAnB,QAAmBA,KAAnB;AACvDC,cAAAA,MADuD,GAC9CV,SAAS,EADqC;AAAA;AAAA,qBAGvDM,KAAK,CAACK,QAAN,CAAeR,WAAW,CAAC;AAAES,gBAAAA,OAAO,EAAE,GAAX;AAAgBC,gBAAAA,QAAQ,EAAE;AAA1B,eAAD,CAA1B,CAHuD;;AAAA;AAAA,+CAKtD;AACHC,gBAAAA,IAAI,EAAEJ,MAAM,CAACK;AADV,eALsD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC,CAA5B;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAA0B;AAC9C,SAAO;AACHA,IAAAA,KAAK,EAAE;AACHC,MAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBhB;AAD5B;AADJ,GAAP;AAKH,CAND;;AAQA,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACR,QAAD,EAAgC;AACvD,SAAO;AACHS,IAAAA,OAAO,EAAE;AACLjB,MAAAA,WAAW,EAAEN,kBAAkB,CAAWM,WAAX,EAAwBQ,QAAxB;AAD1B;AADN,GAAP;AAKH,CAND;;AAQA,eAAeb,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,SAA7C,CAAf","sourcesContent":["import { NextPageContext } from 'next';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Props as SectionHeroProps } from 'components/modules/public/pages/Home/sections/Hero';\n\nimport { wrapper } from 'store';\nimport { State } from 'store/state';\n\nimport { Page } from 'locales/types/components';\nimport ListCollection from 'types/redux/ListCollection';\nimport { ActionResponse } from 'types/redux/ActionResponse';\n\nimport UserEffect from 'models/UserEffect';\n\nimport { getLocale } from 'utils/locale'; \n\nimport Component from './component';\n\nimport { list as listEffects, ListParams as ListEffectsParams } from 'store/modules/userEffects/actions';\n\nexport interface Props {\n    data: Page<PageContent>;\n    actions: {\n        listEffects: (params: ListEffectsParams) => Promise<ActionResponse>;\n    }\n    state: {\n        userEffects: ListCollection<UserEffect>\n    };\n}\n\nexport interface PageContent {\n    hero: SectionHeroProps;\n}\n\nComponent.getInitialProps = wrapper.getInitialPageProps(store => async ({ req, res, query }: NextPageContext) => {\n    const locale = getLocale();\n\n    await store.dispatch(listEffects({ perPage: 999, promoted: true }) as any);\n    \n    return {\n        data: locale.home,\n    }\n});\n\nconst mapStateToProps = (state: State): object => {\n    return {\n        state: {\n            userEffects: state.userEffects.list,\n        },\n    };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): object => {\n    return {\n        actions: {\n            listEffects: bindActionCreators<any, any>(listEffects, dispatch),\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]},"metadata":{},"sourceType":"module"}