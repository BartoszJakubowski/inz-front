{"ast":null,"code":"import * as types from './types';\nimport { reduxRequest as request } from 'services/Api';\nimport { withVariables } from 'utils/string';\nimport { ENDPOINT_PUBLIC_USER_EFFECTS, ENDPOINT_PUBLIC_USER_EFFECT } from 'consts/api';\nexport const list = params => (dispatch, getState) => {\n  return dispatch(request({\n    getState,\n    reduxType: types.LIST,\n    method: 'GET',\n    path: withVariables(ENDPOINT_PUBLIC_USER_EFFECTS, params),\n    params,\n    requestParams: params\n  })).catch(error => {\n    console.error(error);\n    throw error;\n  });\n};\nexport const single = params => (dispatch, getState) => {\n  return dispatch(request({\n    getState,\n    reduxType: types.SINGLE,\n    method: 'GET',\n    path: withVariables(ENDPOINT_PUBLIC_USER_EFFECT, params),\n    params\n  })).catch(error => {\n    console.error(error);\n    throw error;\n  });\n};","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/store/modules/userEffects/actions.ts"],"names":["types","reduxRequest","request","withVariables","ENDPOINT_PUBLIC_USER_EFFECTS","ENDPOINT_PUBLIC_USER_EFFECT","list","params","dispatch","getState","reduxType","LIST","method","path","requestParams","catch","error","console","single","SINGLE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAGA,SAASC,YAAY,IAAIC,OAAzB,QAAwC,cAAxC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,SACIC,4BADJ,EAEIC,2BAFJ,QAGO,YAHP;AAeA,OAAO,MAAMC,IAAI,GAAIC,MAAD,IAAwB,CAACC,QAAD,EAAqBC,QAArB,KAAqE;AAC7G,SAAOD,QAAQ,CACXN,OAAO,CAAC;AACJO,IAAAA,QADI;AAEJC,IAAAA,SAAS,EAAEV,KAAK,CAACW,IAFb;AAGJC,IAAAA,MAAM,EAAE,KAHJ;AAIJC,IAAAA,IAAI,EAAEV,aAAa,CAACC,4BAAD,EAA+BG,MAA/B,CAJf;AAKJA,IAAAA,MALI;AAMJO,IAAAA,aAAa,EAAEP;AANX,GAAD,CADI,CAAR,CAUFQ,KAVE,CAUIC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMA,KAAN;AACH,GAbE,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAME,MAAM,GAAIX,MAAD,IAA0B,CAACC,QAAD,EAAqBC,QAArB,KAAqE;AACjH,SAAOD,QAAQ,CACXN,OAAO,CAAC;AACJO,IAAAA,QADI;AAEJC,IAAAA,SAAS,EAAEV,KAAK,CAACmB,MAFb;AAGJP,IAAAA,MAAM,EAAE,KAHJ;AAIJC,IAAAA,IAAI,EAAEV,aAAa,CAACE,2BAAD,EAA8BE,MAA9B,CAJf;AAKJA,IAAAA;AALI,GAAD,CADI,CAAR,CASFQ,KATE,CASIC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMA,KAAN;AACH,GAZE,CAAP;AAaH,CAdM","sourcesContent":["import * as types from './types';\nimport { ActionResponse } from 'types/redux/ActionResponse';\n\nimport { reduxRequest as request } from 'services/Api';\nimport { withVariables } from 'utils/string';\n\nimport { \n    ENDPOINT_PUBLIC_USER_EFFECTS,\n    ENDPOINT_PUBLIC_USER_EFFECT,\n} from 'consts/api';\n\nexport interface ListParams {\n    promoted?: boolean;\n    leadId?: number;\n    perPage?: number;\n}\n\nexport interface SingleParams {\n    id: string;\n}\n\nexport const list = (params: ListParams) => (dispatch: Function, getState: Function): Promise<ActionResponse> => {\n    return dispatch(\n        request({\n            getState,\n            reduxType: types.LIST,\n            method: 'GET',\n            path: withVariables(ENDPOINT_PUBLIC_USER_EFFECTS, params),\n            params,\n            requestParams: params,\n        })\n    )\n        .catch(error => {\n            console.error(error);\n            throw error;\n        });\n};\n\nexport const single = (params: SingleParams) => (dispatch: Function, getState: Function): Promise<ActionResponse> => {\n    return dispatch(\n        request({\n            getState,\n            reduxType: types.SINGLE,\n            method: 'GET',\n            path: withVariables(ENDPOINT_PUBLIC_USER_EFFECT, params),\n            params,\n        })\n    )\n        .catch(error => {\n            console.error(error);\n            throw error;\n        });\n};"]},"metadata":{},"sourceType":"module"}