{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport OfferProduct from 'models/OfferProduct';\nexport let PeriodTypes;\n\n(function (PeriodTypes) {\n  PeriodTypes[\"Single\"] = \"single\";\n  PeriodTypes[\"Recurring\"] = \"recurring\";\n})(PeriodTypes || (PeriodTypes = {}));\n\nexport let NoticePeriodDurationTypes;\n\n(function (NoticePeriodDurationTypes) {\n  NoticePeriodDurationTypes[\"Days\"] = \"days\";\n  NoticePeriodDurationTypes[\"Months\"] = \"months\";\n  NoticePeriodDurationTypes[\"Years\"] = \"years\";\n})(NoticePeriodDurationTypes || (NoticePeriodDurationTypes = {}));\n\nexport let Types;\n\n(function (Types) {\n  Types[\"Single\"] = \"single\";\n  Types[\"Metamorphosis\"] = \"metamorphosis\";\n  Types[\"Flexible\"] = \"flexible\";\n})(Types || (Types = {}));\n\nexport default class Offer {\n  constructor(data) {\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"slug\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"periodType\", void 0);\n\n    _defineProperty(this, \"products\", void 0);\n\n    _defineProperty(this, \"noticePeriodDurationType\", void 0);\n\n    _defineProperty(this, \"noticePeriodDurationValue\", void 0);\n\n    _defineProperty(this, \"type\", void 0);\n\n    _defineProperty(this, \"typeOption\", void 0);\n\n    _defineProperty(this, \"getType\", (periodType, noticePeriodDurationValue) => {\n      if (periodType === PeriodTypes.Single) {\n        return Types.Single;\n      }\n\n      if (periodType === PeriodTypes.Recurring && noticePeriodDurationValue) {\n        return Types.Metamorphosis;\n      }\n\n      return Types.Flexible;\n    });\n\n    _defineProperty(this, \"getTypeOption\", type => {\n      return typeOptions.find(option => option.value === type) || null;\n    });\n\n    this.id = data.id;\n    this.slug = data.slug;\n    this.name = data.name;\n    this.periodType = data.periodType;\n    this.products = Array.isArray(data.products) ? data.products.map(product => new OfferProduct(product)) : [];\n    this.noticePeriodDurationType = data.noticePeriodDurationType;\n    this.noticePeriodDurationValue = data.noticePeriodDurationValue;\n    this.type = this.getType(this.periodType, this.noticePeriodDurationValue);\n    this.typeOption = this.getTypeOption(this.type);\n  }\n\n}\nexport const typeOptions = [{\n  value: Types.Single,\n  label: 'Pojedyncza'\n}, {\n  value: Types.Metamorphosis,\n  label: 'Metamorfoza'\n}, {\n  value: Types.Flexible,\n  label: 'Elastyczna'\n}];","map":null,"metadata":{},"sourceType":"module"}