{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\nimport StyledComponent from './styles';\nimport Button, { ButtonElements, ButtonStyles, ButtonIconTypes } from 'components/layout/Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst LayoutNavElement = ({\n  buttonProps,\n  elements,\n  variant,\n  scrollToId\n}) => {\n  const {\n    0: element,\n    1: setElement\n  } = useState(null);\n  const hasSubElements = Array.isArray(elements) && elements.length > 0;\n  useEffect(() => {\n    setElement(document.querySelector(scrollToId));\n  });\n  let scrollTo = undefined;\n\n  if (element) {\n    scrollTo = element.offsetTop;\n  }\n\n  return /*#__PURE__*/_jsxs(StyledComponent, {\n    className: classnames('layout-nav-element', `variant-${variant}`, {\n      'with-sub-elements': hasSubElements\n    }),\n    children: [/*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({\n      element: ButtonElements.Anchor,\n      style: ButtonStyles.None,\n      icon: {\n        type: ButtonIconTypes.Element,\n        value: hasSubElements && /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faChevronDown\n        })\n      }\n    }, buttonProps), {}, {\n      onClick: () => scrollToId ? window.scrollTo(0, scrollTo) : null\n    })), hasSubElements && /*#__PURE__*/_jsx(\"div\", {\n      className: \"sub-nav-elements-container\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"sub-nav-elements\",\n        children: elements.map(element => /*#__PURE__*/_jsx(LayoutNavElement, _objectSpread({}, element), element.key))\n      })\n    })]\n  });\n};\n\nexport default LayoutNavElement;","map":null,"metadata":{},"sourceType":"module"}