{"ast":null,"code":"import rollbar, { init as initRollbar } from 'services/Rollbar';\n/* eslint-disable no-console */\n\nexport default {\n  init: function init() {\n    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    initRollbar(payload);\n  },\n  log: function log() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('log', data, payload);\n  },\n  info: function info() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('info', data, payload);\n    this.logRollbar('info', data, payload);\n  },\n  debug: function debug() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('debug', data, payload);\n    this.logRollbar('debug', data, payload);\n  },\n  warning: function warning() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('error', data, payload);\n    this.logRollbar('warning', data, payload);\n  },\n  error: function error() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('error', data, payload);\n    this.logRollbar('error', data, payload);\n  },\n  logConsole: function logConsole(level) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (process.env.APP_ENV === 'development') {\n      console[level](data, payload);\n    }\n  },\n  logRollbar: function logRollbar(level) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (process.env.APP_ENV !== 'development') {\n      rollbar[level](data, payload);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}