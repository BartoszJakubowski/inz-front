{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/Pulpit/inz/my-app/src/components/modules/public/layout/Topbar/component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\nimport { Variants } from './index';\nimport StyledComponent from './styles';\nimport LayoutContainer from 'components/layout/LayoutContainer';\nimport Logo, { Variants as LogoVariants } from 'components/layout/Logo';\nimport NavSection, { Variants as NavSectionVariants } from 'components/layout/NavSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicLayoutTopbar = ({\n  main,\n  side,\n  variant\n}) => {\n  const {\n    0: isNavExpanded,\n    1: setIsNavExpanded\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(StyledComponent, {\n    className: classnames('public-layout-topbar', `variant-${variant}`, {\n      expanded: isNavExpanded\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(LayoutContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-left\",\n          children: [/*#__PURE__*/_jsxDEV(Logo, {\n            variant: variant === Variants.Light ? NavSectionVariants.Dark : NavSectionVariants.Light\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavSection, _objectSpread(_objectSpread({}, main), {}, {\n            variant: variant === Variants.Light ? NavSectionVariants.Dark : NavSectionVariants.Light\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-controls\",\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          variant: LogoVariants.Light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"nav-control nav-control-close\",\n          onClick: () => setIsNavExpanded(false),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-top\",\n          children: /*#__PURE__*/_jsxDEV(NavSection, _objectSpread({}, main), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"login-button\",\n            children: \"Logowanie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavSection, _objectSpread({}, side), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PublicLayoutTopbar;","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/modules/public/layout/Topbar/component.tsx"],"names":["useState","FontAwesomeIcon","faTimes","classnames","Variants","StyledComponent","LayoutContainer","Logo","LogoVariants","NavSection","NavSectionVariants","PublicLayoutTopbar","main","side","variant","isNavExpanded","setIsNavExpanded","expanded","Light","Dark"],"mappings":";;;;;;;;AAAA,SAA4BA,QAA5B,QAA4C,OAA5C;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAiBC,OAAjB,QAAwC,mCAAxC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAAgBC,QAAhB,QAAgC,SAAhC;AAEA,OAAOC,eAAP,MAA4B,UAA5B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,IAAP,IAAeH,QAAQ,IAAII,YAA3B,QAA+C,wBAA/C;AACA,OAAOC,UAAP,IAAqBL,QAAQ,IAAIM,kBAAjC,QAA2D,8BAA3D;;;AAEA,MAAMC,kBAA4C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAC9E,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAyDhB,QAAQ,CAAC,KAAD,CAAvE;AAEA,sBACI,QAAC,eAAD;AACI,IAAA,SAAS,EAAEG,UAAU,CACjB,sBADiB,EAEhB,WAAUW,OAAQ,EAFF,EAGjB;AAAEG,MAAAA,QAAQ,EAAEF;AAAZ,KAHiB,CADzB;AAAA,4BAOI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI,QAAC,eAAD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI,QAAC,IAAD;AACI,YAAA,OAAO,EAAED,OAAO,KAAKV,QAAQ,CAACc,KAArB,GAA6BR,kBAAkB,CAACS,IAAhD,GAAuDT,kBAAkB,CAACQ;AADvF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD,kCACQN,IADR;AAEI,YAAA,OAAO,EAAEE,OAAO,KAAKV,QAAQ,CAACc,KAArB,GAA6BR,kBAAkB,CAACS,IAAhD,GAAuDT,kBAAkB,CAACQ;AAFvF;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAuBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,OAAO,EAAEV,YAAY,CAACU;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,SAAS,EAAC,+BADd;AAEI,UAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,KAAD,CAFnC;AAAA,iCAII,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI,QAAC,UAAD,oBAAgBU,IAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD,oBAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CAnDD;;AAqDA,eAAeF,kBAAf","sourcesContent":["import { FunctionComponent, useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes, faUser } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\n\nimport { Props, Variants } from './index';\n\nimport StyledComponent from './styles';\nimport LayoutContainer from 'components/layout/LayoutContainer';\nimport Logo, { Variants as LogoVariants } from 'components/layout/Logo';\nimport NavSection, { Variants as NavSectionVariants } from 'components/layout/NavSection';\n\nconst PublicLayoutTopbar: FunctionComponent<Props> = ({ main, side, variant }) => {\n    const [isNavExpanded, setIsNavExpanded]: [boolean, Function] = useState(false);\n\n    return (\n        <StyledComponent \n            className={classnames(\n                'public-layout-topbar',\n                `variant-${variant}`,\n                { expanded: isNavExpanded }\n            )}\n        >\n            <div className=\"main\">\n                <LayoutContainer>\n                    <div className=\"col col-left\">\n                        <Logo \n                            variant={variant === Variants.Light ? NavSectionVariants.Dark : NavSectionVariants.Light}\n                        />\n                        <NavSection \n                            {...main}\n                            variant={variant === Variants.Light ? NavSectionVariants.Dark : NavSectionVariants.Light}\n                        />\n                    </div>\n                    <div className=\"col col-right\">\n                        \n                    </div>\n                </LayoutContainer>\n            </div>\n            <div className=\"mobile-nav\">\n                <div className=\"nav-controls\">\n                    <Logo variant={LogoVariants.Light}/>\n                    <a \n                        className=\"nav-control nav-control-close\"\n                        onClick={() => setIsNavExpanded(false)}\n                    >\n                        <FontAwesomeIcon icon={faTimes} />\n                    </a>\n                </div>\n                <div className=\"nav-body\">\n                    <div className=\"row-top\">\n                        <NavSection {...main} />\n                    </div>\n                    <div className=\"row-bottom\">\n                        <a className=\"login-button\">\n                            Logowanie  \n                        </a>\n                        <NavSection {...side} />\n                    </div>\n                </div>\n            </div>\n        </StyledComponent>\n    )\n};\n\nexport default PublicLayoutTopbar;"]},"metadata":{},"sourceType":"module"}