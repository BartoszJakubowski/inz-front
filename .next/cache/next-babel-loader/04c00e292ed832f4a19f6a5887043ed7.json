{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/Pulpit/inz/my-app/src/components/layout/NavElement/component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\nimport StyledComponent from './styles';\nimport Button, { ButtonElements, ButtonStyles, ButtonIconTypes } from 'components/layout/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LayoutNavElement = ({\n  buttonProps,\n  elements,\n  scrollToId\n}) => {\n  const {\n    0: element,\n    1: setElement\n  } = useState(null);\n  const hasSubElements = Array.isArray(elements) && elements.length > 0;\n  useEffect(() => {\n    setElement(document.querySelector(scrollToId));\n  });\n  let scrollTo = undefined;\n\n  if (element) {\n    scrollTo = element.offsetTop;\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledComponent, {\n    className: classnames('layout-nav-element', {\n      'with-sub-elements': hasSubElements\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n      element: ButtonElements.Anchor,\n      style: ButtonStyles.None,\n      icon: {\n        type: ButtonIconTypes.Element,\n        value: hasSubElements && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 47\n        }, this)\n      }\n    }, buttonProps), {}, {\n      onClick: () => scrollToId ? window.scrollTo(0, scrollTo) : null\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), hasSubElements && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-nav-elements-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-nav-elements\",\n        children: elements.map(element => /*#__PURE__*/_jsxDEV(LayoutNavElement, _objectSpread({}, element), element.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\nexport default LayoutNavElement;","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/layout/NavElement/component.tsx"],"names":["React","useEffect","useState","FontAwesomeIcon","faChevronDown","classnames","StyledComponent","Button","ButtonElements","ButtonStyles","ButtonIconTypes","LayoutNavElement","buttonProps","elements","scrollToId","element","setElement","hasSubElements","Array","isArray","length","document","querySelector","scrollTo","undefined","offsetTop","Anchor","None","type","Element","value","window","map","key"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAIA,OAAOC,eAAP,MAA4B,UAA5B;AACA,OAAOC,MAAP,IAAiBC,cAAjB,EAAiCC,YAAjC,EAA+CC,eAA/C,QAAsE,0BAAtE;;;AAEA,MAAMC,gBAA0C,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAA2C;AAC1F,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAyCd,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAMe,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2BA,QAAQ,CAACO,MAAT,GAAkB,CAApE;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,UAAU,CAACK,QAAQ,CAACC,aAAT,CAAuBR,UAAvB,CAAD,CAAV;AACH,GAFQ,CAAT;AAIA,MAAIS,QAAQ,GAAGC,SAAf;;AACA,MAAIT,OAAJ,EAAa;AACTQ,IAAAA,QAAQ,GAAGR,OAAO,CAACU,SAAnB;AACH;;AAED,sBACI,QAAC,eAAD;AACI,IAAA,SAAS,EAAEpB,UAAU,CACjB,oBADiB,EAEjB;AAAE,2BAAqBY;AAAvB,KAFiB,CADzB;AAAA,4BAMI,QAAC,MAAD;AACI,MAAA,OAAO,EAAET,cAAc,CAACkB,MAD5B;AAEI,MAAA,KAAK,EAAEjB,YAAY,CAACkB,IAFxB;AAGI,MAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAElB,eAAe,CAACmB,OADpB;AAEFC,QAAAA,KAAK,EAAEb,cAAc,iBAAK,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEb;AAAvB;AAAA;AAAA;AAAA;AAAA;AAFxB;AAHV,OAOQQ,WAPR;AAQI,MAAA,OAAO,EAAE,MAAME,UAAU,GAAGiB,MAAM,CAACR,QAAP,CAAgB,CAAhB,EAAmBA,QAAnB,CAAH,GAAkC;AAR/D;AAAA;AAAA;AAAA;AAAA,YANJ,EAgBKN,cAAc,iBACX;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACKJ,QAAQ,CAACmB,GAAT,CAAajB,OAAO,iBACjB,QAAC,gBAAD,oBAEQA,OAFR,GACSA,OAAO,CAACkB,GADjB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA5CD;;AA8CA,eAAetB,gBAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\n\nimport { Props } from './index';\n\nimport StyledComponent from './styles';\nimport Button, { ButtonElements, ButtonStyles, ButtonIconTypes } from 'components/layout/Button';\n  \nconst LayoutNavElement: FunctionComponent<Props> = ({ buttonProps, elements, scrollToId }) => {\n    const [element, setElement]: [any, Function] = useState(null);\n    const hasSubElements = Array.isArray(elements) && elements.length > 0;\n\n    useEffect(() => {\n        setElement(document.querySelector(scrollToId));\n    });\n\n    let scrollTo = undefined;\n    if (element) {\n        scrollTo = element.offsetTop;\n    }\n\n    return (\n        <StyledComponent \n            className={classnames(\n                'layout-nav-element',\n                { 'with-sub-elements': hasSubElements }\n            )}\n        >\n            <Button \n                element={ButtonElements.Anchor}\n                style={ButtonStyles.None}\n                icon={{\n                    type: ButtonIconTypes.Element,\n                    value: hasSubElements && (<FontAwesomeIcon icon={faChevronDown} />),\n                }}\n                {...buttonProps}\n                onClick={() => scrollToId ? window.scrollTo(0, scrollTo) : null}\n            />\n            {hasSubElements && (\n                <div className=\"sub-nav-elements-container\">\n                    <div className=\"sub-nav-elements\">\n                        {elements.map(element => (\n                            <LayoutNavElement \n                                key={element.key}\n                                {...element}\n                            />\n                        ))}\n                    </div>\n                </div>\n            )}\n        </StyledComponent>\n    )\n};\n\nexport default LayoutNavElement;"]},"metadata":{},"sourceType":"module"}