{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/bartosz/Pulpit/inz/my-app/src/components/layout/forms/Input/component.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef } from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport { ValidationActions } from 'components/layout/forms/InputWrapper';\nimport StyledComponent from './styles';\nimport InputWrapper from 'components/layout/forms/InputWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LayoutFormsInput = function LayoutFormsInput(_ref) {\n  _s();\n\n  var _formik$errors$name;\n\n  var formik = _ref.formik,\n      name = _ref.name,\n      label = _ref.label,\n      type = _ref.type,\n      placeholder = _ref.placeholder,\n      helper = _ref.helper,\n      value = _ref.value,\n      _onChange = _ref.onChange,\n      style = _ref.style,\n      styles = _ref.styles,\n      disabled = _ref.disabled,\n      error = _ref.error,\n      validationAction = _ref.validationAction,\n      decoratorLeft = _ref.decoratorLeft,\n      decoratorRight = _ref.decoratorRight,\n      spinButtons = _ref.spinButtons,\n      inputProps = _ref.inputProps,\n      required = _ref.required;\n  var inputRef = useRef(null);\n  var errorMessage = (formik === null || formik === void 0 ? void 0 : (_formik$errors$name = formik.errors[name]) === null || _formik$errors$name === void 0 ? void 0 : _formik$errors$name.toString()) || error;\n  var isNumbericValue = !isNaN(value);\n\n  var onIncrement = function onIncrement() {\n    if (!isNumbericValue) return;\n    var nextValue = value;\n\n    if (inputProps !== null && inputProps !== void 0 && inputProps.max && nextValue >= (inputProps === null || inputProps === void 0 ? void 0 : inputProps.max)) {\n      nextValue = (inputProps === null || inputProps === void 0 ? void 0 : inputProps.max) - 1;\n    }\n\n    fireOnChangeEvent(nextValue + 1);\n  };\n\n  var onDecrement = function onDecrement() {\n    if (!isNumbericValue) return;\n    var nextValue = value;\n\n    if (inputProps !== null && inputProps !== void 0 && inputProps.min && nextValue <= (inputProps === null || inputProps === void 0 ? void 0 : inputProps.min)) {\n      nextValue = (inputProps === null || inputProps === void 0 ? void 0 : inputProps.min) + 1;\n    }\n\n    fireOnChangeEvent(nextValue - 1);\n  };\n\n  var fireOnChangeEvent = function fireOnChangeEvent(value) {\n    Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value').set.call(inputRef.current, value);\n    inputRef.current.dispatchEvent(new Event('input', {\n      bubbles: true\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledComponent, {\n    className: classnames('layout-forms-input', [\"style-\".concat(style)], {\n      'error': Boolean(error),\n      'decorator-left': Boolean(error && validationAction === ValidationActions.Decorator || decoratorLeft && decoratorLeft.visible !== false),\n      'decorator-right': Boolean(decoratorRight && decoratorRight.visible !== false),\n      'with-spin-buttons': Boolean(spinButtons === null || spinButtons === void 0 ? void 0 : spinButtons.visible)\n    }),\n    style: styles,\n    children: /*#__PURE__*/_jsxDEV(InputWrapper, {\n      name: name,\n      label: label,\n      helper: helper,\n      error: errorMessage,\n      validationAction: validationAction,\n      decoratorLeft: decoratorLeft,\n      decoratorRight: decoratorRight,\n      required: required,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        ref: inputRef,\n        className: \"input\",\n        name: name,\n        type: type,\n        placeholder: placeholder,\n        value: value === null ? '' : value,\n        onChange: function onChange(e) {\n          formik === null || formik === void 0 ? void 0 : formik.setFieldError(name, null);\n\n          _onChange(e);\n        },\n        disabled: disabled\n      }, inputProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, _this), (spinButtons === null || spinButtons === void 0 ? void 0 : spinButtons.visible) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"spin-button spin-button-increment\",\n          onClick: function onClick() {\n            return onIncrement();\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChevronUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"spin-button spin-button-decrement\",\n          onClick: function onClick() {\n            return onDecrement();\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChevronDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LayoutFormsInput, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = LayoutFormsInput;\nexport default LayoutFormsInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutFormsInput\");","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/layout/forms/Input/component.tsx"],"names":["useRef","classnames","FontAwesomeIcon","faChevronDown","faChevronUp","ValidationActions","StyledComponent","InputWrapper","LayoutFormsInput","formik","name","label","type","placeholder","helper","value","onChange","style","styles","disabled","error","validationAction","decoratorLeft","decoratorRight","spinButtons","inputProps","required","inputRef","errorMessage","errors","toString","isNumbericValue","isNaN","onIncrement","nextValue","max","fireOnChangeEvent","onDecrement","min","Object","getOwnPropertyDescriptor","window","HTMLInputElement","prototype","set","call","current","dispatchEvent","Event","bubbles","Boolean","Decorator","visible","e","setFieldError"],"mappings":"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","sourcesContent":["import { ChangeEvent, FunctionComponent, useRef } from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { Props } from './index';\nimport { ValidationActions } from 'components/layout/forms/InputWrapper';\n\nimport StyledComponent from './styles';\n\nimport InputWrapper from 'components/layout/forms/InputWrapper';\n\nconst LayoutFormsInput: FunctionComponent<Props> = ({ formik, name, label, type, placeholder, helper, value, onChange, style, styles, disabled, error, validationAction, decoratorLeft, decoratorRight, spinButtons, inputProps, required }) => {\n    const inputRef = useRef(null);\n    const errorMessage = formik?.errors[name]?.toString() || error;\n    const isNumbericValue = !isNaN(value as number);\n\n    const onIncrement = (): void => {\n        if(!isNumbericValue) return;\n\n        let nextValue = value as number;\n        if(inputProps?.max && nextValue >= inputProps?.max) {\n            nextValue = inputProps?.max -1;\n        }\n\n        fireOnChangeEvent(nextValue + 1);\n    }\n\n    const onDecrement = (): void => {\n        if(!isNumbericValue) return;\n\n        let nextValue = value as number;\n        if(inputProps?.min && nextValue <= inputProps?.min) {\n            nextValue = inputProps?.min + 1;\n        }\n\n        fireOnChangeEvent(nextValue - 1);\n    }\n\n    const fireOnChangeEvent = (value: any): void => {\n        Object\n            .getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value')\n            .set\n            .call(inputRef.current, value);\n\n        inputRef.current.dispatchEvent(\n            new Event('input', { bubbles: true})\n        );\n    }\n    \n    return (\n        <StyledComponent\n            className={classnames(\n                'layout-forms-input',\n                [`style-${style}`],\n                {\n                    'error': Boolean(error),\n                    'decorator-left': Boolean(\n                        error && validationAction === ValidationActions.Decorator ||\n                        decoratorLeft && decoratorLeft.visible !== false\n                    ),\n                    'decorator-right': Boolean(decoratorRight && decoratorRight.visible !== false),\n                    'with-spin-buttons': Boolean(spinButtons?.visible),\n                }\n            )}\n            style={styles}\n        >\n            <InputWrapper\n                name={name}\n                label={label}\n                helper={helper}\n                error={errorMessage}\n                validationAction={validationAction}\n                decoratorLeft={decoratorLeft}\n                decoratorRight={decoratorRight}\n                required={required}\n            >\n                <input\n                    ref={inputRef}\n                    className=\"input\"\n                    name={name}\n                    type={type}\n                    placeholder={placeholder}\n                    value={value === null ? '' : value}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                        formik?.setFieldError(name, null)\n                        onChange(e)\n                    }}\n                    disabled={disabled}\n                    {...inputProps}\n                />\n                {spinButtons?.visible && (\n                    <div className=\"spin-buttons\">\n                        <a \n                            className=\"spin-button spin-button-increment\"\n                            onClick={() => onIncrement()}\n                        >\n                            <FontAwesomeIcon icon={faChevronUp} />\n\n                        </a>\n                        <a \n                            className=\"spin-button spin-button-decrement\"\n                            onClick={() => onDecrement()}\n                        >\n                            <FontAwesomeIcon icon={faChevronDown} />\n\n                        </a>\n                    </div>\n                )}\n            </InputWrapper>\n        </StyledComponent>\n    );\n};\n\nexport default LayoutFormsInput;"]},"metadata":{},"sourceType":"module"}