{"ast":null,"code":"import rollbar, { init as initRollbar } from 'services/Rollbar';\n/* eslint-disable no-console */\n\nexport default {\n  init: function init() {\n    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    initRollbar(payload);\n  },\n  log: function log() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('log', data, payload);\n  },\n  info: function info() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('info', data, payload);\n    this.logRollbar('info', data, payload);\n  },\n  debug: function debug() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('debug', data, payload);\n    this.logRollbar('debug', data, payload);\n  },\n  warning: function warning() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('error', data, payload);\n    this.logRollbar('warning', data, payload);\n  },\n  error: function error() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.logConsole('error', data, payload);\n    this.logRollbar('error', data, payload);\n  },\n  logConsole: function logConsole(level) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (process.env.APP_ENV === 'development') {\n      console[level](data, payload);\n    }\n  },\n  logRollbar: function logRollbar(level) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (process.env.APP_ENV !== 'development') {\n      rollbar[level](data, payload);\n    }\n  }\n};","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/services/Logger.ts"],"names":["rollbar","init","initRollbar","payload","log","data","logConsole","info","logRollbar","debug","warning","error","level","process","env","APP_ENV","console"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,IAAI,IAAIC,WAA1B,QAA6C,kBAA7C;AAEA;;AACA,eAAe;AACXD,EAAAA,IADW,kBACc;AAAA,QAAnBE,OAAmB,uEAAT,EAAS;AACrBD,IAAAA,WAAW,CAACC,OAAD,CAAX;AACH,GAHU;AAIXC,EAAAA,GAJW,iBAIwB;AAAA,QAA9BC,IAA8B,uEAAvB,EAAuB;AAAA,QAAnBF,OAAmB,uEAAT,EAAS;AAC/B,SAAKG,UAAL,CAAgB,KAAhB,EAAuBD,IAAvB,EAA6BF,OAA7B;AACH,GANU;AAOXI,EAAAA,IAPW,kBAOyB;AAAA,QAA9BF,IAA8B,uEAAvB,EAAuB;AAAA,QAAnBF,OAAmB,uEAAT,EAAS;AAChC,SAAKG,UAAL,CAAgB,MAAhB,EAAwBD,IAAxB,EAA8BF,OAA9B;AACA,SAAKK,UAAL,CAAgB,MAAhB,EAAwBH,IAAxB,EAA8BF,OAA9B;AACH,GAVU;AAWXM,EAAAA,KAXW,mBAW0B;AAAA,QAA9BJ,IAA8B,uEAAvB,EAAuB;AAAA,QAAnBF,OAAmB,uEAAT,EAAS;AACjC,SAAKG,UAAL,CAAgB,OAAhB,EAAyBD,IAAzB,EAA+BF,OAA/B;AACA,SAAKK,UAAL,CAAgB,OAAhB,EAAyBH,IAAzB,EAA+BF,OAA/B;AACH,GAdU;AAeXO,EAAAA,OAfW,qBAe4B;AAAA,QAA9BL,IAA8B,uEAAvB,EAAuB;AAAA,QAAnBF,OAAmB,uEAAT,EAAS;AACnC,SAAKG,UAAL,CAAgB,OAAhB,EAAyBD,IAAzB,EAA+BF,OAA/B;AACA,SAAKK,UAAL,CAAgB,SAAhB,EAA2BH,IAA3B,EAAiCF,OAAjC;AACH,GAlBU;AAmBXQ,EAAAA,KAnBW,mBAmB0B;AAAA,QAA9BN,IAA8B,uEAAvB,EAAuB;AAAA,QAAnBF,OAAmB,uEAAT,EAAS;AACjC,SAAKG,UAAL,CAAgB,OAAhB,EAAyBD,IAAzB,EAA+BF,OAA/B;AACA,SAAKK,UAAL,CAAgB,OAAhB,EAAyBH,IAAzB,EAA+BF,OAA/B;AACH,GAtBU;AAuBXG,EAAAA,UAvBW,sBAuBCM,KAvBD,EAuB8C;AAAA,QAA9BP,IAA8B,uEAAvB,EAAuB;AAAA,QAAnBF,OAAmB,uEAAT,EAAS;;AACrD,QAAIU,OAAO,CAACC,GAAR,CAAYC,OAAZ,KAAwB,aAA5B,EAA2C;AACvCC,MAAAA,OAAO,CAACJ,KAAD,CAAP,CAAeP,IAAf,EAAqBF,OAArB;AACH;AACJ,GA3BU;AA4BXK,EAAAA,UA5BW,sBA4BCI,KA5BD,EA4B8C;AAAA,QAA9BP,IAA8B,uEAAvB,EAAuB;AAAA,QAAnBF,OAAmB,uEAAT,EAAS;;AACrD,QAAIU,OAAO,CAACC,GAAR,CAAYC,OAAZ,KAAwB,aAA5B,EAA2C;AACvCf,MAAAA,OAAO,CAACY,KAAD,CAAP,CAAeP,IAAf,EAAqBF,OAArB;AACH;AACJ;AAhCU,CAAf","sourcesContent":["import rollbar, { init as initRollbar } from 'services/Rollbar';\n\n/* eslint-disable no-console */\nexport default {\n    init (payload = {}): any {\n        initRollbar(payload);\n    },\n    log (data = {}, payload = {}): any {\n        this.logConsole('log', data, payload);\n    },\n    info (data = {}, payload = {}): any {\n        this.logConsole('info', data, payload);\n        this.logRollbar('info', data, payload);\n    },\n    debug (data = {}, payload = {}): any {\n        this.logConsole('debug', data, payload);\n        this.logRollbar('debug', data, payload);\n    },\n    warning (data = {}, payload = {}): any {\n        this.logConsole('error', data, payload);\n        this.logRollbar('warning', data, payload);\n    },\n    error (data = {}, payload = {}): any {\n        this.logConsole('error', data, payload);\n        this.logRollbar('error', data, payload);\n    },\n    logConsole (level: string, data = {}, payload = {}): any {\n        if (process.env.APP_ENV === 'development') {\n            console[level](data, payload);\n        }\n    },\n    logRollbar (level: string, data = {}, payload = {}): any {\n        if (process.env.APP_ENV !== 'development') {\n            rollbar[level](data, payload);\n        }\n    },\n};\n"]},"metadata":{},"sourceType":"module"}