{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport * as types from './types';\nimport { INIT_FLAG, SUCCESS_FLAG, FAIL_FLAG, LIST_MARKUP, ELEMENT_MARKUP } from 'consts/redux';\nimport { API_RESOURCE_USER_EFFECTS, API_RESOURCE_USER_EFFECT } from 'consts/apiResources';\nimport UserEffect from 'models/UserEffect';\nexport var initialState = {\n  list: LIST_MARKUP,\n  mapById: {}\n};\nexport default function PublicUserEffectsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      // Attention! This will overwrite client state! Real apps should use proper reconciliation.\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case types.LIST + '_' + INIT_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: _objectSpread(_objectSpread(_objectSpread({}, LIST_MARKUP), state.list), {}, {\n          params: action.params,\n          isLoading: true,\n          isLoaded: false\n        })\n      });\n\n    case types.LIST + '_' + SUCCESS_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: _objectSpread(_objectSpread(_objectSpread({}, LIST_MARKUP), state.list), {}, {\n          isLoading: false,\n          isLoaded: true,\n          elements: action.payload.data[API_RESOURCE_USER_EFFECTS].elements.map(function (elem) {\n            return new UserEffect(elem);\n          }),\n          meta: action.payload.data[API_RESOURCE_USER_EFFECTS].meta,\n          error: false\n        })\n      });\n\n    case types.LIST + '_' + FAIL_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: _objectSpread(_objectSpread(_objectSpread({}, LIST_MARKUP), state.list), {}, {\n          isLoading: false,\n          isLoaded: true,\n          error: true\n        })\n      });\n\n    case types.SINGLE + '_' + INIT_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mapById: _objectSpread(_objectSpread({}, state.mapById), {}, _defineProperty({}, action.params.id, _objectSpread(_objectSpread(_objectSpread({}, ELEMENT_MARKUP), state.mapById[action.params.id] || {}), {}, {\n          isLoading: true,\n          isLoaded: false\n        })))\n      });\n\n    case types.SINGLE + '_' + SUCCESS_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mapById: _objectSpread(_objectSpread({}, state.mapById), {}, _defineProperty({}, action.params.id, _objectSpread(_objectSpread(_objectSpread({}, ELEMENT_MARKUP), state.mapById[action.params.id] || {}), {}, {\n          isLoading: false,\n          isLoaded: true,\n          data: new UserEffect(action.payload.data[API_RESOURCE_USER_EFFECT]),\n          error: false\n        })))\n      });\n\n    case types.SINGLE + '_' + FAIL_FLAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mapById: _objectSpread(_objectSpread({}, state.mapById), {}, _defineProperty({}, action.params.id, _objectSpread(_objectSpread(_objectSpread({}, ELEMENT_MARKUP), state.mapById[action.params.id] || {}), {}, {\n          isLoading: false,\n          isLoaded: true,\n          data: null,\n          error: true\n        })))\n      });\n\n    default:\n      return state;\n  }\n}\n_c = PublicUserEffectsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicUserEffectsReducer\");","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/store/modules/userEffects/reducer.ts"],"names":["HYDRATE","types","INIT_FLAG","SUCCESS_FLAG","FAIL_FLAG","LIST_MARKUP","ELEMENT_MARKUP","API_RESOURCE_USER_EFFECTS","API_RESOURCE_USER_EFFECT","UserEffect","initialState","list","mapById","PublicUserEffectsReducer","state","action","type","payload","LIST","params","isLoading","isLoaded","elements","data","map","elem","meta","error","SINGLE","id"],"mappings":"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","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nimport * as types from './types';\nimport { ActionResponse } from 'types/redux/ActionResponse';\nimport ListCollection from 'types/redux/ListCollection';\nimport Element from 'types/redux/Element';\nimport { INIT_FLAG, SUCCESS_FLAG, FAIL_FLAG, LIST_MARKUP, ELEMENT_MARKUP } from 'consts/redux';\nimport { \n    API_RESOURCE_USER_EFFECTS,\n    API_RESOURCE_USER_EFFECT,\n} from 'consts/apiResources';\n\nimport ApiUserEffect from 'types/api/UserEffect';\nimport UserEffect from 'models/UserEffect';\n\nexport interface State {\n    list: ListCollection<UserEffect>;\n    mapById: {\n        [key: string]: Element<UserEffect>;\n    };\n}\n\nexport const initialState = {\n    list: LIST_MARKUP,\n    mapById: {},\n};\n\nexport default function PublicUserEffectsReducer(state: State = initialState, action: ActionResponse): any {\n    switch (action.type) {\n        case HYDRATE:\n            // Attention! This will overwrite client state! Real apps should use proper reconciliation.\n            return { ...state, ...action.payload };\n\n        case types.LIST + '_' + INIT_FLAG:\n            return {\n                ...state,\n                list: {\n                    ...LIST_MARKUP,\n                    ...state.list,\n                    params: action.params,\n                    isLoading: true,\n                    isLoaded: false,\n                },\n            };\n        case types.LIST + '_' + SUCCESS_FLAG:\n            return {\n                ...state,\n                list: {\n                    ...LIST_MARKUP,\n                    ...state.list,\n                    isLoading: false,\n                    isLoaded: true,\n                    elements: action.payload.data[API_RESOURCE_USER_EFFECTS]\n                        .elements\n                        .map((elem: ApiUserEffect) => new UserEffect(elem)),\n                    meta: action.payload.data[API_RESOURCE_USER_EFFECTS].meta,\n                    error: false,\n                },\n            };\n        case types.LIST + '_' + FAIL_FLAG:\n            return {\n                ...state,\n                list: {\n                    ...LIST_MARKUP,\n                    ...state.list,\n                    isLoading: false,\n                    isLoaded: true,\n                    error: true,\n                },\n            };\n\n        case types.SINGLE + '_' + INIT_FLAG:\n            return {\n                ...state,\n                mapById: {\n                    ...state.mapById,\n                    [action.params.id]: {\n                        ...ELEMENT_MARKUP,\n                        ...(state.mapById[action.params.id] || {}),\n                        isLoading: true,\n                        isLoaded: false,\n                    },\n                },\n            };\n        case types.SINGLE + '_' + SUCCESS_FLAG:\n            return {\n                ...state,\n                mapById: {\n                    ...state.mapById,\n                    [action.params.id]: {\n                        ...ELEMENT_MARKUP,\n                        ...(state.mapById[action.params.id] || {}),\n                        isLoading: false,\n                        isLoaded: true,\n                        data: new UserEffect(action.payload.data[API_RESOURCE_USER_EFFECT]),\n                        error: false,\n                    },\n                },\n            };\n        case types.SINGLE + '_' + FAIL_FLAG:\n            return {\n                ...state,\n                mapById: {\n                    ...state.mapById,\n                    [action.params.id]: {\n                        ...ELEMENT_MARKUP,\n                        ...(state.mapById[action.params.id] || {}),\n                        isLoading: false,\n                        isLoaded: true,\n                        data: null,\n                        error: true,\n                    },\n                },\n            };\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}