{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/Pulpit/inz/my-app/src/components/layout/InternetConnectionIndicator/component.tsx\";\nimport { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { States } from './index';\nimport StyledComponent from './styles';\nimport LayoutContainer from 'components/layout/LayoutContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LayoutInternetConnectionIndicator = () => {\n  const {\n    0: isPanelVisible,\n    1: setIsPanelVisible\n  } = useState(false);\n  const {\n    0: state,\n    1: setState\n  } = useState(null);\n  useEffect(() => {\n    window.addEventListener('online', onSetOnline);\n    window.addEventListener('offline', onSetOffline);\n    return () => {\n      window.removeEventListener('online', onSetOnline);\n      window.removeEventListener('offline', onSetOffline);\n    };\n  }, []);\n\n  const onSetOnline = () => {\n    setIsPanelVisible(true);\n    setState(States.Online);\n    setTimeout(() => {\n      setIsPanelVisible(false);\n    }, 5000);\n  };\n\n  const onSetOffline = () => {\n    setIsPanelVisible(true);\n    setState(States.Offline);\n  };\n\n  if (!isPanelVisible) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledComponent, {\n    className: classnames('layout-internet-connection-indicator', `state-${state}`),\n    children: /*#__PURE__*/_jsxDEV(LayoutContainer, {\n      children: [state === States.Online && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-text\",\n          children: \"Po\\u0142\\u0105czenie internetowe przywr\\xF3cone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"indicator-icon\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheckCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), state === States.Offline && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-text\",\n          children: \"Po\\u0142\\u0105czenie internetowe zerwane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"indicator-icon\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimesCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\nexport default LayoutInternetConnectionIndicator;","map":{"version":3,"sources":["/home/bartosz/Pulpit/inz/my-app/src/components/layout/InternetConnectionIndicator/component.tsx"],"names":["useState","useEffect","classnames","FontAwesomeIcon","faTimesCircle","faCheckCircle","States","StyledComponent","LayoutContainer","LayoutInternetConnectionIndicator","isPanelVisible","setIsPanelVisible","state","setState","window","addEventListener","onSetOnline","onSetOffline","removeEventListener","Online","setTimeout","Offline"],"mappings":";AAAA,SAA4BA,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,mCAA7C;AAEA,SAAgBC,MAAhB,QAA8B,SAA9B;AAEA,OAAOC,eAAP,MAA4B,UAA5B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;;AAEA,MAAMC,iCAA2D,GAAG,MAAM;AACtE,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAA2DX,QAAQ,CAAC,KAAD,CAAzE;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAwCb,QAAQ,CAAC,IAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,WAAlC;AACAF,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCE,YAAnC;AAEA,WAAO,MAAM;AACTH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,WAArC;AACAF,MAAAA,MAAM,CAACI,mBAAP,CAA2B,SAA3B,EAAsCD,YAAtC;AACH,KAHD;AAIH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMD,WAAW,GAAG,MAAM;AACtBL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,QAAQ,CAACP,MAAM,CAACa,MAAR,CAAR;AACAC,IAAAA,UAAU,CAAC,MAAM;AACbT,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAND;;AAQA,QAAMM,YAAY,GAAG,MAAM;AACvBN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,QAAQ,CAACP,MAAM,CAACe,OAAR,CAAR;AACH,GAHD;;AAKA,MAAG,CAACX,cAAJ,EAAoB;AAChB,WAAO,IAAP;AACH;;AAED,sBACI,QAAC,eAAD;AACI,IAAA,SAAS,EAAER,UAAU,CACjB,sCADiB,EAEhB,SAAQU,KAAM,EAFE,CADzB;AAAA,2BAMI,QAAC,eAAD;AAAA,iBACKA,KAAK,KAAKN,MAAM,CAACa,MAAjB,iBACG;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,EAWKO,KAAK,KAAKN,MAAM,CAACe,OAAjB,iBACG;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEjB;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA9DD;;AAgEA,eAAeK,iCAAf","sourcesContent":["import { FunctionComponent, useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { Props, States } from './index';\n\nimport StyledComponent from './styles';\nimport LayoutContainer from 'components/layout/LayoutContainer';\n\nconst LayoutInternetConnectionIndicator: FunctionComponent<Props> = () => {\n    const [isPanelVisible, setIsPanelVisible]: [boolean, Function] = useState(false);\n    const [state, setState]: [States, Function] = useState(null);\n\n    useEffect(() => {\n        window.addEventListener('online', onSetOnline);\n        window.addEventListener('offline', onSetOffline);\n\n        return () => {\n            window.removeEventListener('online', onSetOnline);\n            window.removeEventListener('offline', onSetOffline);\n        };\n    }, []);\n\n    const onSetOnline = () => {\n        setIsPanelVisible(true);\n        setState(States.Online);\n        setTimeout(() => {\n            setIsPanelVisible(false);\n        }, 5000);\n    }\n\n    const onSetOffline = () => {\n        setIsPanelVisible(true);\n        setState(States.Offline);\n    }\n\n    if(!isPanelVisible) {\n        return null;\n    }\n\n    return (\n        <StyledComponent\n            className={classnames(\n                'layout-internet-connection-indicator',\n                `state-${state}`\n            )}\n        >\n            <LayoutContainer>\n                {state === States.Online && (\n                    <div className=\"indicator-content\">\n                        <span className=\"indicator-text\">\n                            Połączenie internetowe przywrócone\n                        </span>\n                        <div className=\"indicator-icon\">\n                            <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                    </div>\n                )}\n                {state === States.Offline && (\n                    <div className=\"indicator-content\">\n                        <span className=\"indicator-text\">\n                            Połączenie internetowe zerwane\n                        </span>\n                        <div className=\"indicator-icon\">\n                            <FontAwesomeIcon icon={faTimesCircle} />\n                        </div>\n                    </div>\n                )}\n            </LayoutContainer>\n        </StyledComponent>\n    );\n};\n\nexport default LayoutInternetConnectionIndicator;"]},"metadata":{},"sourceType":"module"}