{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport let Types;\n\n(function (Types) {\n  Types[\"Gym\"] = \"gym\";\n  Types[\"Online\"] = \"online\";\n  Types[\"Outside\"] = \"outside\";\n  Types[\"Home\"] = \"home\";\n  Types[\"Office\"] = \"office\";\n  Types[\"DoctorOffice\"] = \"doctorOffice\";\n  Types[\"MassageOffice\"] = \"massageOffice\";\n})(Types || (Types = {}));\n\nexport default class Location {\n  constructor(data) {\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"type\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"slug\", void 0);\n\n    _defineProperty(this, \"city\", void 0);\n\n    _defineProperty(this, \"address\", void 0);\n\n    _defineProperty(this, \"typeOption\", void 0);\n\n    _defineProperty(this, \"getType\", type => {\n      if (type === Types.Gym) {\n        return Types.Gym;\n      }\n\n      if (type === Types.Online) {\n        return Types.Online;\n      }\n\n      if (type === Types.Outside) {\n        return Types.Outside;\n      }\n\n      if (type === Types.Home) {\n        return Types.Home;\n      }\n\n      if (type === Types.Office) {\n        return Types.Office;\n      }\n\n      if (type === Types.DoctorOffice) {\n        return Types.DoctorOffice;\n      }\n\n      if (type === Types.MassageOffice) {\n        return Types.MassageOffice;\n      }\n    });\n\n    _defineProperty(this, \"getTypeOption\", type => {\n      return typeOptions.find(option => option.value === type) || null;\n    });\n\n    this.id = data.id;\n    this.type = this.getType(this.type);\n    this.name = data.name;\n    this.slug = data.slug;\n    this.city = data.city;\n    this.address = data.address;\n    this.typeOption = this.getTypeOption(this.type);\n  }\n\n}\nexport const typeOptions = [{\n  value: Types.Gym,\n  label: 'Siłownia'\n}, {\n  value: Types.Online,\n  label: 'Online'\n}, {\n  value: Types.Outside,\n  label: 'Plener'\n}, {\n  value: Types.Home,\n  label: 'Dom klienta'\n}, {\n  value: Types.Office,\n  label: 'Biuro'\n}, {\n  value: Types.DoctorOffice,\n  label: 'Gabinet lekarski'\n}, {\n  value: Types.MassageOffice,\n  label: 'Gabinet masażu'\n}];","map":null,"metadata":{},"sourceType":"module"}